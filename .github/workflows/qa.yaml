name: QA
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '*'
jobs:
  spotless:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'
      - uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-spotless-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Run Spotless
        run: mvn spotless:check
  sonarcloud:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql
        env:
          MYSQL_USER: spring
          MYSQL_PASSWORD: spring
          MYSQL_DATABASE: spring
          MYSQL_ROOT_PASSWORD: spring
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'
      - uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-spotless-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-sonarcloud-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Configuration
        run: |
          openssl genpkey -out felf.pem -algorithm RSA -pkeyopt rsa_keygen_bits:2048
          echo 'spring.datasource.url=jdbc:mysql://localhost/spring' >> application.properties
          echo 'spring.datasource.username=spring' >> application.properties
          echo 'spring.datasource.password=spring' >> application.properties
          echo 'spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver' >> application.properties
          echo "spring.security.oauth2.client.registration.github.client-id=dummy" >> application.properties
          echo "spring.security.oauth2.client.registration.github.client-secret=dummy" >> application.properties
          echo "felf.github.app.pem=$(base64 felf.pem | xargs | sed 's/ //g')" >> application.properties
          echo "felf.github.app.id=$((RANDOM + 100000))" >> application.properties
          echo "felf.github.app.webhook.secret=watup" >> application.properties
          echo "felf.github.app.slug=felftest" >> application.properties
          echo "felf.app.name=FelfTest" >> application.properties
          cat application.properties
          mkdir -p felf/src/main/resources fakelf/src/main/resources
          cp application.properties felf/src/main/resources
          cp application.properties fakelf/src/main/resources
      - name: Analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn clean verify sonar:sonar -Pcoverage  -Dsonar.projectKey=zoftko_felf
